plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

ext {
	jdk_version = 8
}

sourceCompatibility = jdk_version
targetCompatibility = jdk_version

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	mavenLocal()
	maven {
		url "https://jitpack.io"
	}
}


loom {
	/*
	mixin {
	// currently not supported until loom 0.13
		showMessageTypes = true
		messages {
			MIXIN_ON_INVALID_TYPE = 'warning'
			TARGET_VALIDATOR = 'warning'
		}
	}
	*/
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	// we neeed gson 2.9.0 (or higher) for GsonUtil
	// https://mvnrepository.com/artifact/com.google.code.gson/gson
	include(implementation('com.google.code.gson:gson:2.9.0'))
	
	// for local build
	//def GsonUtil = implementation('de.klotzi111.util:GsonUtil:1+')
	def GsonUtil = implementation('com.github.Klotzi111:GsonUtil:main-SNAPSHOT')
	include(GsonUtil)

	// Junit 5 for testing
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
	useJUnitPlatform()
	testLogging {
		showStandardStreams = true
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile) {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	options.encoding = "UTF-8"
	options.release = jdk_version
	
	options.compilerArgs += '-AshowMessageTypes=true'
	options.compilerArgs += '-AMSG_MIXIN_ON_INVALID_TYPE=warning'
	options.compilerArgs += '-AMSG_TARGET_VALIDATOR=warning'
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}